/*
 * Kafka Management API
 *
 * Kafka Management API is a REST API to manage Kafka instances
 *
 * API version: 1.15.0
 * Contact: rhosak-support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kafkamgmtclient

import (
	"encoding/json"
)

// EnterpriseClusterListItemAllOf struct for EnterpriseClusterListItemAllOf
type EnterpriseClusterListItemAllOf struct {
	// Indicates whether Kafkas created on this data plane cluster have to be accessed via private network
	AccessKafkasViaPrivateNetwork bool `json:"access_kafkas_via_private_network"`
	// The OCM's cluster id of the registered Enterprise cluster.
	ClusterId *string `json:"cluster_id,omitempty"`
	// The status of Enterprise cluster registration
	Status *string `json:"status,omitempty"`
	// The cloud provider for this cluster. This valus will be used as the Kafka's cloud provider value when a Kafka is created on this cluster
	CloudProvider *string `json:"cloud_provider,omitempty"`
	// The region of this cluster. This valus will be used as the Kafka's region value when a Kafka is created on this cluster
	Region *string `json:"region,omitempty"`
	// A flag indicating whether this cluster is available on multiple availability zones or not
	MultiAz bool `json:"multi_az"`
}

// NewEnterpriseClusterListItemAllOf instantiates a new EnterpriseClusterListItemAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseClusterListItemAllOf(accessKafkasViaPrivateNetwork bool, multiAz bool) *EnterpriseClusterListItemAllOf {
	this := EnterpriseClusterListItemAllOf{}
	this.AccessKafkasViaPrivateNetwork = accessKafkasViaPrivateNetwork
	this.MultiAz = multiAz
	return &this
}

// NewEnterpriseClusterListItemAllOfWithDefaults instantiates a new EnterpriseClusterListItemAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseClusterListItemAllOfWithDefaults() *EnterpriseClusterListItemAllOf {
	this := EnterpriseClusterListItemAllOf{}
	return &this
}

// GetAccessKafkasViaPrivateNetwork returns the AccessKafkasViaPrivateNetwork field value
func (o *EnterpriseClusterListItemAllOf) GetAccessKafkasViaPrivateNetwork() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AccessKafkasViaPrivateNetwork
}

// GetAccessKafkasViaPrivateNetworkOk returns a tuple with the AccessKafkasViaPrivateNetwork field value
// and a boolean to check if the value has been set.
func (o *EnterpriseClusterListItemAllOf) GetAccessKafkasViaPrivateNetworkOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessKafkasViaPrivateNetwork, true
}

// SetAccessKafkasViaPrivateNetwork sets field value
func (o *EnterpriseClusterListItemAllOf) SetAccessKafkasViaPrivateNetwork(v bool) {
	o.AccessKafkasViaPrivateNetwork = v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *EnterpriseClusterListItemAllOf) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseClusterListItemAllOf) GetClusterIdOk() (*string, bool) {
	if o == nil || o.ClusterId == nil {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *EnterpriseClusterListItemAllOf) HasClusterId() bool {
	if o != nil && o.ClusterId != nil {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *EnterpriseClusterListItemAllOf) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EnterpriseClusterListItemAllOf) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseClusterListItemAllOf) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EnterpriseClusterListItemAllOf) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EnterpriseClusterListItemAllOf) SetStatus(v string) {
	o.Status = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *EnterpriseClusterListItemAllOf) GetCloudProvider() string {
	if o == nil || o.CloudProvider == nil {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseClusterListItemAllOf) GetCloudProviderOk() (*string, bool) {
	if o == nil || o.CloudProvider == nil {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *EnterpriseClusterListItemAllOf) HasCloudProvider() bool {
	if o != nil && o.CloudProvider != nil {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *EnterpriseClusterListItemAllOf) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *EnterpriseClusterListItemAllOf) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseClusterListItemAllOf) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *EnterpriseClusterListItemAllOf) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *EnterpriseClusterListItemAllOf) SetRegion(v string) {
	o.Region = &v
}

// GetMultiAz returns the MultiAz field value
func (o *EnterpriseClusterListItemAllOf) GetMultiAz() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MultiAz
}

// GetMultiAzOk returns a tuple with the MultiAz field value
// and a boolean to check if the value has been set.
func (o *EnterpriseClusterListItemAllOf) GetMultiAzOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MultiAz, true
}

// SetMultiAz sets field value
func (o *EnterpriseClusterListItemAllOf) SetMultiAz(v bool) {
	o.MultiAz = v
}

func (o EnterpriseClusterListItemAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access_kafkas_via_private_network"] = o.AccessKafkasViaPrivateNetwork
	}
	if o.ClusterId != nil {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.CloudProvider != nil {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["multi_az"] = o.MultiAz
	}
	return json.Marshal(toSerialize)
}

type NullableEnterpriseClusterListItemAllOf struct {
	value *EnterpriseClusterListItemAllOf
	isSet bool
}

func (v NullableEnterpriseClusterListItemAllOf) Get() *EnterpriseClusterListItemAllOf {
	return v.value
}

func (v *NullableEnterpriseClusterListItemAllOf) Set(val *EnterpriseClusterListItemAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseClusterListItemAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseClusterListItemAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseClusterListItemAllOf(val *EnterpriseClusterListItemAllOf) *NullableEnterpriseClusterListItemAllOf {
	return &NullableEnterpriseClusterListItemAllOf{value: val, isSet: true}
}

func (v NullableEnterpriseClusterListItemAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseClusterListItemAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


