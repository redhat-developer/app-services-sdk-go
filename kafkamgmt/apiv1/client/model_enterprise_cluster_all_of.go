/*
 * Kafka Management API
 *
 * Kafka Management API is a REST API to manage Kafka instances
 *
 * API version: 1.15.0
 * Contact: rhosak-support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kafkamgmtclient

import (
	"encoding/json"
)

// EnterpriseClusterAllOf struct for EnterpriseClusterAllOf
type EnterpriseClusterAllOf struct {
	SupportedInstanceTypes *SupportedKafkaInstanceTypesList `json:"supported_instance_types,omitempty"`
	CapacityInformation *EnterpriseClusterAllOfCapacityInformation `json:"capacity_information,omitempty"`
}

// NewEnterpriseClusterAllOf instantiates a new EnterpriseClusterAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseClusterAllOf() *EnterpriseClusterAllOf {
	this := EnterpriseClusterAllOf{}
	return &this
}

// NewEnterpriseClusterAllOfWithDefaults instantiates a new EnterpriseClusterAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseClusterAllOfWithDefaults() *EnterpriseClusterAllOf {
	this := EnterpriseClusterAllOf{}
	return &this
}

// GetSupportedInstanceTypes returns the SupportedInstanceTypes field value if set, zero value otherwise.
func (o *EnterpriseClusterAllOf) GetSupportedInstanceTypes() SupportedKafkaInstanceTypesList {
	if o == nil || o.SupportedInstanceTypes == nil {
		var ret SupportedKafkaInstanceTypesList
		return ret
	}
	return *o.SupportedInstanceTypes
}

// GetSupportedInstanceTypesOk returns a tuple with the SupportedInstanceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseClusterAllOf) GetSupportedInstanceTypesOk() (*SupportedKafkaInstanceTypesList, bool) {
	if o == nil || o.SupportedInstanceTypes == nil {
		return nil, false
	}
	return o.SupportedInstanceTypes, true
}

// HasSupportedInstanceTypes returns a boolean if a field has been set.
func (o *EnterpriseClusterAllOf) HasSupportedInstanceTypes() bool {
	if o != nil && o.SupportedInstanceTypes != nil {
		return true
	}

	return false
}

// SetSupportedInstanceTypes gets a reference to the given SupportedKafkaInstanceTypesList and assigns it to the SupportedInstanceTypes field.
func (o *EnterpriseClusterAllOf) SetSupportedInstanceTypes(v SupportedKafkaInstanceTypesList) {
	o.SupportedInstanceTypes = &v
}

// GetCapacityInformation returns the CapacityInformation field value if set, zero value otherwise.
func (o *EnterpriseClusterAllOf) GetCapacityInformation() EnterpriseClusterAllOfCapacityInformation {
	if o == nil || o.CapacityInformation == nil {
		var ret EnterpriseClusterAllOfCapacityInformation
		return ret
	}
	return *o.CapacityInformation
}

// GetCapacityInformationOk returns a tuple with the CapacityInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseClusterAllOf) GetCapacityInformationOk() (*EnterpriseClusterAllOfCapacityInformation, bool) {
	if o == nil || o.CapacityInformation == nil {
		return nil, false
	}
	return o.CapacityInformation, true
}

// HasCapacityInformation returns a boolean if a field has been set.
func (o *EnterpriseClusterAllOf) HasCapacityInformation() bool {
	if o != nil && o.CapacityInformation != nil {
		return true
	}

	return false
}

// SetCapacityInformation gets a reference to the given EnterpriseClusterAllOfCapacityInformation and assigns it to the CapacityInformation field.
func (o *EnterpriseClusterAllOf) SetCapacityInformation(v EnterpriseClusterAllOfCapacityInformation) {
	o.CapacityInformation = &v
}

func (o EnterpriseClusterAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SupportedInstanceTypes != nil {
		toSerialize["supported_instance_types"] = o.SupportedInstanceTypes
	}
	if o.CapacityInformation != nil {
		toSerialize["capacity_information"] = o.CapacityInformation
	}
	return json.Marshal(toSerialize)
}

type NullableEnterpriseClusterAllOf struct {
	value *EnterpriseClusterAllOf
	isSet bool
}

func (v NullableEnterpriseClusterAllOf) Get() *EnterpriseClusterAllOf {
	return v.value
}

func (v *NullableEnterpriseClusterAllOf) Set(val *EnterpriseClusterAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseClusterAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseClusterAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseClusterAllOf(val *EnterpriseClusterAllOf) *NullableEnterpriseClusterAllOf {
	return &NullableEnterpriseClusterAllOf{value: val, isSet: true}
}

func (v NullableEnterpriseClusterAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseClusterAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


