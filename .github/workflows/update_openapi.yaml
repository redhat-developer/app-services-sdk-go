name: Update OpenAPI specification
on:
  repository_dispatch:
    types: openapi-spec-change

jobs:
  generate_client:
    env:
      GOPATH: /home/runner/work/app-services-sdk-go/go
      CLIENT_ID: ${{ github.event.client_payload.id }}
      DOWNLOAD_URL: ${{ github.event.client_payload.download_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.16
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set client metadata
        id: set_config
        run: |
          content=$(cat .config/api-client-metadata.json)
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=client_config::$content"
      - name: Set OpenAPI file path
        id: set_filepath
        run: |
          openapi_filepath=${{ fromJSON(steps.set_config.outputs.client_config)[env.CLIENT_ID].openapi_file }}
          echo "::set-output name=openapi_file::$openapi_filepath"

          if test -f "$openapi_filepath"; then
            mv "$openapi_filepath" .openapi/tmp-oas
          fi
      - name: Fetch OpenAPI schema
        run: |
          export PATH=${PATH}:`go env GOPATH`/bin

          # fetch API spec
          go get -u github.com/redhat-developer/app-services-sdk-go/internal/apigen/cmd/api-fetch@latest
          api-fetch --download-url=${{ env.DOWNLOAD_URL }} --download-location=".openapi" --token=${{ secrets.BF2_TOKEN }}
          go mod tidy

      - name: Generate OpenAPI diff
        id: generate_openapi_diff
        run: |
          if test -f ".openapi/tmp-oas"; then
            go install github.com/tufin/oasdiff@latest

            changes=$(oasdiff -base .openapi/tmp-oas -revision ${{ steps.set_filepath.outputs.openapi_file }} -format text )
            echo $changes
            # output the diff to a var
            echo "::set-output name=changelog::$changelog"

            rm -rf .openapi/tmp-oas
          fi
      
      - uses: peter-evans/create-pull-request@v4
        with:
          title: "chore(openapi): update ${{ env.CLIENT_ID }} OpenAPI document"
          token: "${{ secrets.CI_USER_TOKEN }}"
          commit-message: >
            chore(openapi): update ${{ env.CLIENT_ID }} OpenAPI document

            ${{ steps.generate_openapi_diff.outputs.changelog }}
          author: "app-services-ci <app-services-ci@users.noreply.github.com>"
          branch: chore/add-${{ env.CLIENT_ID }}-openapi
          branch-suffix: timestamp
          reviewers: '@redhat-developer/app-services-sdk-maintainers'
          delete-branch: true
          body: >
            _This pull request was auto-generated_

            This PR adds the latest version OpenAPI document version for **${{ env.CLIENT_ID }}**.

            ## Actions:

                1. Review changes on the OpenAPI file and validate if it is correct.
                2. Perform manual changes if needed or apply local patches for the OpenAPI files.
                3. Merge this pull request only when the API has been released.

            ## Changes

            ${{ steps.generate_openapi_diff.outputs.changelog }}