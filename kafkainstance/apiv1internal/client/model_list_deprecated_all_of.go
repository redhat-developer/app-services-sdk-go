/*
 * Kafka Admin REST API
 *
 * An API to provide REST endpoints for query Kafka for admin operations
 *
 * API version: 0.11.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kafkainstanceclient

import (
	"encoding/json"
)

// ListDeprecatedAllOf struct for ListDeprecatedAllOf
type ListDeprecatedAllOf struct {

}

// NewListDeprecatedAllOf instantiates a new ListDeprecatedAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDeprecatedAllOf() *ListDeprecatedAllOf {
	this := ListDeprecatedAllOf{}
	return &this
}

// NewListDeprecatedAllOfWithDefaults instantiates a new ListDeprecatedAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDeprecatedAllOfWithDefaults() *ListDeprecatedAllOf {
	this := ListDeprecatedAllOf{}

	return &this
}


func (o ListDeprecatedAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	
	return json.Marshal(toSerialize)
}

type NullableListDeprecatedAllOf struct {
	value *ListDeprecatedAllOf
	isSet bool
}

func (v NullableListDeprecatedAllOf) Get() *ListDeprecatedAllOf {
	return v.value
}

func (v *NullableListDeprecatedAllOf) Set(val *ListDeprecatedAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableListDeprecatedAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableListDeprecatedAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDeprecatedAllOf(val *ListDeprecatedAllOf) *NullableListDeprecatedAllOf {
	return &NullableListDeprecatedAllOf{value: val, isSet: true}
}

func (v NullableListDeprecatedAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDeprecatedAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

