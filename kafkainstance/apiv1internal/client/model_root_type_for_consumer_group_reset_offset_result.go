/*
 * Kafka Admin REST API
 *
 * An API to provide REST endpoints for query Kafka for admin operations
 *
 * API version: 0.11.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kafkainstanceclient

import (
	"encoding/json"
)

// RootTypeForConsumerGroupResetOffsetResult struct for RootTypeForConsumerGroupResetOffsetResult
type RootTypeForConsumerGroupResetOffsetResult struct {

	Items *[]ConsumerGroupResetOffsetResultItem `json:"items,omitempty"`

}

// NewRootTypeForConsumerGroupResetOffsetResult instantiates a new RootTypeForConsumerGroupResetOffsetResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootTypeForConsumerGroupResetOffsetResult() *RootTypeForConsumerGroupResetOffsetResult {
	this := RootTypeForConsumerGroupResetOffsetResult{}
	return &this
}

// NewRootTypeForConsumerGroupResetOffsetResultWithDefaults instantiates a new RootTypeForConsumerGroupResetOffsetResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootTypeForConsumerGroupResetOffsetResultWithDefaults() *RootTypeForConsumerGroupResetOffsetResult {
	this := RootTypeForConsumerGroupResetOffsetResult{}


	return &this
}


// GetItems returns the Items field value if set, zero value otherwise.
func (o *RootTypeForConsumerGroupResetOffsetResult) GetItems() []ConsumerGroupResetOffsetResultItem {
	if o == nil || o.Items == nil {
		var ret []ConsumerGroupResetOffsetResultItem
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootTypeForConsumerGroupResetOffsetResult) GetItemsOk() (*[]ConsumerGroupResetOffsetResultItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *RootTypeForConsumerGroupResetOffsetResult) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ConsumerGroupResetOffsetResultItem and assigns it to the Items field.
func (o *RootTypeForConsumerGroupResetOffsetResult) SetItems(v []ConsumerGroupResetOffsetResultItem) {
	o.Items = &v
}


func (o RootTypeForConsumerGroupResetOffsetResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
    
	return json.Marshal(toSerialize)
}

type NullableRootTypeForConsumerGroupResetOffsetResult struct {
	value *RootTypeForConsumerGroupResetOffsetResult
	isSet bool
}

func (v NullableRootTypeForConsumerGroupResetOffsetResult) Get() *RootTypeForConsumerGroupResetOffsetResult {
	return v.value
}

func (v *NullableRootTypeForConsumerGroupResetOffsetResult) Set(val *RootTypeForConsumerGroupResetOffsetResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRootTypeForConsumerGroupResetOffsetResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRootTypeForConsumerGroupResetOffsetResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootTypeForConsumerGroupResetOffsetResult(val *RootTypeForConsumerGroupResetOffsetResult) *NullableRootTypeForConsumerGroupResetOffsetResult {
	return &NullableRootTypeForConsumerGroupResetOffsetResult{value: val, isSet: true}
}

func (v NullableRootTypeForConsumerGroupResetOffsetResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootTypeForConsumerGroupResetOffsetResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

