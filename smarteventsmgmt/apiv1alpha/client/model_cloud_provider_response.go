/*
 * Red Hat Openshift SmartEvents Fleet Manager
 *
 * The API exposed by the fleet manager of the SmartEvents service.
 *
 * API version: 0.0.1
 * Contact: openbridge-dev@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smarteventsmgmtclient

import (
	"encoding/json"
)

// CloudProviderResponse struct for CloudProviderResponse
type CloudProviderResponse struct {
	Kind string `json:"kind"`
	Id string `json:"id"`
	Name *string `json:"name,omitempty"`
	Href string `json:"href"`
	DisplayName string `json:"display_name"`
	Enabled bool `json:"enabled"`
}

// NewCloudProviderResponse instantiates a new CloudProviderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudProviderResponse(kind string, id string, href string, displayName string, enabled bool) *CloudProviderResponse {
	this := CloudProviderResponse{}
	this.Kind = kind
	this.Id = id
	this.Href = href
	this.DisplayName = displayName
	this.Enabled = enabled
	return &this
}

// NewCloudProviderResponseWithDefaults instantiates a new CloudProviderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudProviderResponseWithDefaults() *CloudProviderResponse {
	this := CloudProviderResponse{}
	return &this
}

// GetKind returns the Kind field value
func (o *CloudProviderResponse) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *CloudProviderResponse) GetKindOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *CloudProviderResponse) SetKind(v string) {
	o.Kind = v
}

// GetId returns the Id field value
func (o *CloudProviderResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CloudProviderResponse) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CloudProviderResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CloudProviderResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudProviderResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CloudProviderResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CloudProviderResponse) SetName(v string) {
	o.Name = &v
}

// GetHref returns the Href field value
func (o *CloudProviderResponse) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *CloudProviderResponse) GetHrefOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *CloudProviderResponse) SetHref(v string) {
	o.Href = v
}

// GetDisplayName returns the DisplayName field value
func (o *CloudProviderResponse) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CloudProviderResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CloudProviderResponse) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetEnabled returns the Enabled field value
func (o *CloudProviderResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *CloudProviderResponse) GetEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *CloudProviderResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o CloudProviderResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["href"] = o.Href
	}
	if true {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableCloudProviderResponse struct {
	value *CloudProviderResponse
	isSet bool
}

func (v NullableCloudProviderResponse) Get() *CloudProviderResponse {
	return v.value
}

func (v *NullableCloudProviderResponse) Set(val *CloudProviderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudProviderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudProviderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudProviderResponse(val *CloudProviderResponse) *NullableCloudProviderResponse {
	return &NullableCloudProviderResponse{value: val, isSet: true}
}

func (v NullableCloudProviderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudProviderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


