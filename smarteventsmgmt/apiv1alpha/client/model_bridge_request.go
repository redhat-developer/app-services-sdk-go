/*
 * Red Hat Openshift SmartEvents Fleet Manager V2
 *
 * The API exposed by the fleet manager of the SmartEvents service.
 *
 * API version: 0.0.1
 * Contact: openbridge-dev@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smarteventsmgmtclient

import (
	"encoding/json"
)

// BridgeRequest struct for BridgeRequest
type BridgeRequest struct {
	Name string `json:"name"`
	CloudProvider string `json:"cloud_provider"`
	Region string `json:"region"`
}

// NewBridgeRequest instantiates a new BridgeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBridgeRequest(name string, cloudProvider string, region string) *BridgeRequest {
	this := BridgeRequest{}
	this.Name = name
	this.CloudProvider = cloudProvider
	this.Region = region
	return &this
}

// NewBridgeRequestWithDefaults instantiates a new BridgeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBridgeRequestWithDefaults() *BridgeRequest {
	this := BridgeRequest{}
	return &this
}

// GetName returns the Name field value
func (o *BridgeRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BridgeRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BridgeRequest) SetName(v string) {
	o.Name = v
}

// GetCloudProvider returns the CloudProvider field value
func (o *BridgeRequest) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *BridgeRequest) GetCloudProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *BridgeRequest) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetRegion returns the Region field value
func (o *BridgeRequest) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *BridgeRequest) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *BridgeRequest) SetRegion(v string) {
	o.Region = v
}

func (o BridgeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if true {
		toSerialize["region"] = o.Region
	}
	return json.Marshal(toSerialize)
}

type NullableBridgeRequest struct {
	value *BridgeRequest
	isSet bool
}

func (v NullableBridgeRequest) Get() *BridgeRequest {
	return v.value
}

func (v *NullableBridgeRequest) Set(val *BridgeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBridgeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBridgeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBridgeRequest(val *BridgeRequest) *NullableBridgeRequest {
	return &NullableBridgeRequest{value: val, isSet: true}
}

func (v NullableBridgeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBridgeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


