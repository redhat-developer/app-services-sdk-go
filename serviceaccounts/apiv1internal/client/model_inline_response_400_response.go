/*
 * Service Accounts API Documentation
 *
 * This is the API documentation for Service Accounts
 *
 * API version: 1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccountsclient

import (
	"encoding/json"
	"time"
)

// InlineResponse400Response struct for InlineResponse400Response
type InlineResponse400Response struct {

	Metadata *map[string][]map[string]interface{} `json:"metadata,omitempty"`

	Entity *map[string]interface{} `json:"entity,omitempty"`

	Status *int32 `json:"status,omitempty"`

	EntityTag *InlineResponse400ResponseEntityTag `json:"entityTag,omitempty"`

	Cookies *map[string]InlineResponse400ResponseCookies `json:"cookies,omitempty"`

	AllowedMethods *[]string `json:"allowedMethods,omitempty"`

	MediaType *InlineResponse400ResponseMediaType `json:"mediaType,omitempty"`

	StringHeaders *map[string][]string `json:"stringHeaders,omitempty"`

	StatusInfo *InlineResponse400ResponseStatusInfo `json:"statusInfo,omitempty"`

	Links *[]InlineResponse400ResponseLinks `json:"links,omitempty"`

	Length *int32 `json:"length,omitempty"`

	Language *InlineResponse400ResponseLanguage `json:"language,omitempty"`

	Location *string `json:"location,omitempty"`

	LastModified *time.Time `json:"lastModified,omitempty"`

	Date *time.Time `json:"date,omitempty"`

	Headers *map[string][]map[string]interface{} `json:"headers,omitempty"`

}

// NewInlineResponse400Response instantiates a new InlineResponse400Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse400Response() *InlineResponse400Response {
	this := InlineResponse400Response{}
	return &this
}

// NewInlineResponse400ResponseWithDefaults instantiates a new InlineResponse400Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse400ResponseWithDefaults() *InlineResponse400Response {
	this := InlineResponse400Response{}

















	return &this
}


// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetMetadata() map[string][]map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string][]map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetMetadataOk() (*map[string][]map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string][]map[string]interface{} and assigns it to the Metadata field.
func (o *InlineResponse400Response) SetMetadata(v map[string][]map[string]interface{}) {
	o.Metadata = &v
}


// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetEntity() map[string]interface{} {
	if o == nil || o.Entity == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetEntityOk() (*map[string]interface{}, bool) {
	if o == nil || o.Entity == nil {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasEntity() bool {
	if o != nil && o.Entity != nil {
		return true
	}

	return false
}

// SetEntity gets a reference to the given map[string]interface{} and assigns it to the Entity field.
func (o *InlineResponse400Response) SetEntity(v map[string]interface{}) {
	o.Entity = &v
}


// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *InlineResponse400Response) SetStatus(v int32) {
	o.Status = &v
}


// GetEntityTag returns the EntityTag field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetEntityTag() InlineResponse400ResponseEntityTag {
	if o == nil || o.EntityTag == nil {
		var ret InlineResponse400ResponseEntityTag
		return ret
	}
	return *o.EntityTag
}

// GetEntityTagOk returns a tuple with the EntityTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetEntityTagOk() (*InlineResponse400ResponseEntityTag, bool) {
	if o == nil || o.EntityTag == nil {
		return nil, false
	}
	return o.EntityTag, true
}

// HasEntityTag returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasEntityTag() bool {
	if o != nil && o.EntityTag != nil {
		return true
	}

	return false
}

// SetEntityTag gets a reference to the given InlineResponse400ResponseEntityTag and assigns it to the EntityTag field.
func (o *InlineResponse400Response) SetEntityTag(v InlineResponse400ResponseEntityTag) {
	o.EntityTag = &v
}


// GetCookies returns the Cookies field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetCookies() map[string]InlineResponse400ResponseCookies {
	if o == nil || o.Cookies == nil {
		var ret map[string]InlineResponse400ResponseCookies
		return ret
	}
	return *o.Cookies
}

// GetCookiesOk returns a tuple with the Cookies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetCookiesOk() (*map[string]InlineResponse400ResponseCookies, bool) {
	if o == nil || o.Cookies == nil {
		return nil, false
	}
	return o.Cookies, true
}

// HasCookies returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasCookies() bool {
	if o != nil && o.Cookies != nil {
		return true
	}

	return false
}

// SetCookies gets a reference to the given map[string]InlineResponse400ResponseCookies and assigns it to the Cookies field.
func (o *InlineResponse400Response) SetCookies(v map[string]InlineResponse400ResponseCookies) {
	o.Cookies = &v
}


// GetAllowedMethods returns the AllowedMethods field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetAllowedMethods() []string {
	if o == nil || o.AllowedMethods == nil {
		var ret []string
		return ret
	}
	return *o.AllowedMethods
}

// GetAllowedMethodsOk returns a tuple with the AllowedMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetAllowedMethodsOk() (*[]string, bool) {
	if o == nil || o.AllowedMethods == nil {
		return nil, false
	}
	return o.AllowedMethods, true
}

// HasAllowedMethods returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasAllowedMethods() bool {
	if o != nil && o.AllowedMethods != nil {
		return true
	}

	return false
}

// SetAllowedMethods gets a reference to the given []string and assigns it to the AllowedMethods field.
func (o *InlineResponse400Response) SetAllowedMethods(v []string) {
	o.AllowedMethods = &v
}


// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetMediaType() InlineResponse400ResponseMediaType {
	if o == nil || o.MediaType == nil {
		var ret InlineResponse400ResponseMediaType
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetMediaTypeOk() (*InlineResponse400ResponseMediaType, bool) {
	if o == nil || o.MediaType == nil {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasMediaType() bool {
	if o != nil && o.MediaType != nil {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given InlineResponse400ResponseMediaType and assigns it to the MediaType field.
func (o *InlineResponse400Response) SetMediaType(v InlineResponse400ResponseMediaType) {
	o.MediaType = &v
}


// GetStringHeaders returns the StringHeaders field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetStringHeaders() map[string][]string {
	if o == nil || o.StringHeaders == nil {
		var ret map[string][]string
		return ret
	}
	return *o.StringHeaders
}

// GetStringHeadersOk returns a tuple with the StringHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetStringHeadersOk() (*map[string][]string, bool) {
	if o == nil || o.StringHeaders == nil {
		return nil, false
	}
	return o.StringHeaders, true
}

// HasStringHeaders returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasStringHeaders() bool {
	if o != nil && o.StringHeaders != nil {
		return true
	}

	return false
}

// SetStringHeaders gets a reference to the given map[string][]string and assigns it to the StringHeaders field.
func (o *InlineResponse400Response) SetStringHeaders(v map[string][]string) {
	o.StringHeaders = &v
}


// GetStatusInfo returns the StatusInfo field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetStatusInfo() InlineResponse400ResponseStatusInfo {
	if o == nil || o.StatusInfo == nil {
		var ret InlineResponse400ResponseStatusInfo
		return ret
	}
	return *o.StatusInfo
}

// GetStatusInfoOk returns a tuple with the StatusInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetStatusInfoOk() (*InlineResponse400ResponseStatusInfo, bool) {
	if o == nil || o.StatusInfo == nil {
		return nil, false
	}
	return o.StatusInfo, true
}

// HasStatusInfo returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasStatusInfo() bool {
	if o != nil && o.StatusInfo != nil {
		return true
	}

	return false
}

// SetStatusInfo gets a reference to the given InlineResponse400ResponseStatusInfo and assigns it to the StatusInfo field.
func (o *InlineResponse400Response) SetStatusInfo(v InlineResponse400ResponseStatusInfo) {
	o.StatusInfo = &v
}


// GetLinks returns the Links field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetLinks() []InlineResponse400ResponseLinks {
	if o == nil || o.Links == nil {
		var ret []InlineResponse400ResponseLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetLinksOk() (*[]InlineResponse400ResponseLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InlineResponse400ResponseLinks and assigns it to the Links field.
func (o *InlineResponse400Response) SetLinks(v []InlineResponse400ResponseLinks) {
	o.Links = &v
}


// GetLength returns the Length field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetLength() int32 {
	if o == nil || o.Length == nil {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetLengthOk() (*int32, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
func (o *InlineResponse400Response) SetLength(v int32) {
	o.Length = &v
}


// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetLanguage() InlineResponse400ResponseLanguage {
	if o == nil || o.Language == nil {
		var ret InlineResponse400ResponseLanguage
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetLanguageOk() (*InlineResponse400ResponseLanguage, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given InlineResponse400ResponseLanguage and assigns it to the Language field.
func (o *InlineResponse400Response) SetLanguage(v InlineResponse400ResponseLanguage) {
	o.Language = &v
}


// GetLocation returns the Location field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *InlineResponse400Response) SetLocation(v string) {
	o.Location = &v
}


// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetLastModified() time.Time {
	if o == nil || o.LastModified == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *InlineResponse400Response) SetLastModified(v time.Time) {
	o.LastModified = &v
}


// GetDate returns the Date field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetDate() time.Time {
	if o == nil || o.Date == nil {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetDateOk() (*time.Time, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *InlineResponse400Response) SetDate(v time.Time) {
	o.Date = &v
}


// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *InlineResponse400Response) GetHeaders() map[string][]map[string]interface{} {
	if o == nil || o.Headers == nil {
		var ret map[string][]map[string]interface{}
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400Response) GetHeadersOk() (*map[string][]map[string]interface{}, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *InlineResponse400Response) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string][]map[string]interface{} and assigns it to the Headers field.
func (o *InlineResponse400Response) SetHeaders(v map[string][]map[string]interface{}) {
	o.Headers = &v
}


func (o InlineResponse400Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
    
	if o.Entity != nil {
		toSerialize["entity"] = o.Entity
	}
    
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
    
	if o.EntityTag != nil {
		toSerialize["entityTag"] = o.EntityTag
	}
    
	if o.Cookies != nil {
		toSerialize["cookies"] = o.Cookies
	}
    
	if o.AllowedMethods != nil {
		toSerialize["allowedMethods"] = o.AllowedMethods
	}
    
	if o.MediaType != nil {
		toSerialize["mediaType"] = o.MediaType
	}
    
	if o.StringHeaders != nil {
		toSerialize["stringHeaders"] = o.StringHeaders
	}
    
	if o.StatusInfo != nil {
		toSerialize["statusInfo"] = o.StatusInfo
	}
    
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
    
	if o.Length != nil {
		toSerialize["length"] = o.Length
	}
    
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
    
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
    
	if o.LastModified != nil {
		toSerialize["lastModified"] = o.LastModified
	}
    
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
    
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
    
	return json.Marshal(toSerialize)
}

type NullableInlineResponse400Response struct {
	value *InlineResponse400Response
	isSet bool
}

func (v NullableInlineResponse400Response) Get() *InlineResponse400Response {
	return v.value
}

func (v *NullableInlineResponse400Response) Set(val *InlineResponse400Response) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse400Response) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse400Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse400Response(val *InlineResponse400Response) *NullableInlineResponse400Response {
	return &NullableInlineResponse400Response{value: val, isSet: true}
}

func (v NullableInlineResponse400Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse400Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

