/*
 * Service Accounts API Documentation
 *
 * This is the API documentation for Service Accounts
 *
 * API version: 1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccountsclient

import (
	"encoding/json"
	"time"
)

// InlineResponse400ResponseCookies struct for InlineResponse400ResponseCookies
type InlineResponse400ResponseCookies struct {

	Name *string `json:"name,omitempty"`

	Value *string `json:"value,omitempty"`

	Version *int32 `json:"version,omitempty"`

	Path *string `json:"path,omitempty"`

	Domain *string `json:"domain,omitempty"`

	Comment *string `json:"comment,omitempty"`

	MaxAge *int32 `json:"maxAge,omitempty"`

	Expiry *time.Time `json:"expiry,omitempty"`

	Secure *bool `json:"secure,omitempty"`

	HttpOnly *bool `json:"httpOnly,omitempty"`

}

// NewInlineResponse400ResponseCookies instantiates a new InlineResponse400ResponseCookies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse400ResponseCookies() *InlineResponse400ResponseCookies {
	this := InlineResponse400ResponseCookies{}
	return &this
}

// NewInlineResponse400ResponseCookiesWithDefaults instantiates a new InlineResponse400ResponseCookies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse400ResponseCookiesWithDefaults() *InlineResponse400ResponseCookies {
	this := InlineResponse400ResponseCookies{}











	return &this
}


// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse400ResponseCookies) SetName(v string) {
	o.Name = &v
}


// GetValue returns the Value field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *InlineResponse400ResponseCookies) SetValue(v string) {
	o.Value = &v
}


// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *InlineResponse400ResponseCookies) SetVersion(v int32) {
	o.Version = &v
}


// GetPath returns the Path field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *InlineResponse400ResponseCookies) SetPath(v string) {
	o.Path = &v
}


// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *InlineResponse400ResponseCookies) SetDomain(v string) {
	o.Domain = &v
}


// GetComment returns the Comment field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *InlineResponse400ResponseCookies) SetComment(v string) {
	o.Comment = &v
}


// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetMaxAge() int32 {
	if o == nil || o.MaxAge == nil {
		var ret int32
		return ret
	}
	return *o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetMaxAgeOk() (*int32, bool) {
	if o == nil || o.MaxAge == nil {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasMaxAge() bool {
	if o != nil && o.MaxAge != nil {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given int32 and assigns it to the MaxAge field.
func (o *InlineResponse400ResponseCookies) SetMaxAge(v int32) {
	o.MaxAge = &v
}


// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetExpiry() time.Time {
	if o == nil || o.Expiry == nil {
		var ret time.Time
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetExpiryOk() (*time.Time, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given time.Time and assigns it to the Expiry field.
func (o *InlineResponse400ResponseCookies) SetExpiry(v time.Time) {
	o.Expiry = &v
}


// GetSecure returns the Secure field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetSecure() bool {
	if o == nil || o.Secure == nil {
		var ret bool
		return ret
	}
	return *o.Secure
}

// GetSecureOk returns a tuple with the Secure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetSecureOk() (*bool, bool) {
	if o == nil || o.Secure == nil {
		return nil, false
	}
	return o.Secure, true
}

// HasSecure returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasSecure() bool {
	if o != nil && o.Secure != nil {
		return true
	}

	return false
}

// SetSecure gets a reference to the given bool and assigns it to the Secure field.
func (o *InlineResponse400ResponseCookies) SetSecure(v bool) {
	o.Secure = &v
}


// GetHttpOnly returns the HttpOnly field value if set, zero value otherwise.
func (o *InlineResponse400ResponseCookies) GetHttpOnly() bool {
	if o == nil || o.HttpOnly == nil {
		var ret bool
		return ret
	}
	return *o.HttpOnly
}

// GetHttpOnlyOk returns a tuple with the HttpOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse400ResponseCookies) GetHttpOnlyOk() (*bool, bool) {
	if o == nil || o.HttpOnly == nil {
		return nil, false
	}
	return o.HttpOnly, true
}

// HasHttpOnly returns a boolean if a field has been set.
func (o *InlineResponse400ResponseCookies) HasHttpOnly() bool {
	if o != nil && o.HttpOnly != nil {
		return true
	}

	return false
}

// SetHttpOnly gets a reference to the given bool and assigns it to the HttpOnly field.
func (o *InlineResponse400ResponseCookies) SetHttpOnly(v bool) {
	o.HttpOnly = &v
}


func (o InlineResponse400ResponseCookies) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
    
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
    
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
    
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
    
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
    
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
    
	if o.MaxAge != nil {
		toSerialize["maxAge"] = o.MaxAge
	}
    
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
    
	if o.Secure != nil {
		toSerialize["secure"] = o.Secure
	}
    
	if o.HttpOnly != nil {
		toSerialize["httpOnly"] = o.HttpOnly
	}
    
	return json.Marshal(toSerialize)
}

type NullableInlineResponse400ResponseCookies struct {
	value *InlineResponse400ResponseCookies
	isSet bool
}

func (v NullableInlineResponse400ResponseCookies) Get() *InlineResponse400ResponseCookies {
	return v.value
}

func (v *NullableInlineResponse400ResponseCookies) Set(val *InlineResponse400ResponseCookies) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse400ResponseCookies) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse400ResponseCookies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse400ResponseCookies(val *InlineResponse400ResponseCookies) *NullableInlineResponse400ResponseCookies {
	return &NullableInlineResponse400ResponseCookies{value: val, isSet: true}
}

func (v NullableInlineResponse400ResponseCookies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse400ResponseCookies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

